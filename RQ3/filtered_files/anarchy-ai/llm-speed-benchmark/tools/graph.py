# NOTE: (11-24-2023) most of this code was generated by ChatGPT (GPT-4). It is a quick solution and needs refinement

import matplotlib.pyplot as plt
import matplotlib.dates as mdates
from datetime import datetime
import json
import os
import glob

def pick_json_file(parent_directory):
    # list all files in the parent directory that have a .json extension.
    json_files = glob.glob(os.path.join(parent_directory, 'reports/*.json'))
    json_files = [string for string in json_files if "report" in string]
    
    # display the JSON files.
    print("Please select a JSON file to load:")
    for idx, file_name in enumerate(json_files):
        print(f"{idx}: {file_name}")

    # prompt the user to select a file by number.
    selected_index = int(input("Enter the number of the JSON file you want to read: "))
    selected_file_path = json_files[selected_index]
    
    # read the selected JSON file.
    with open(selected_file_path) as file:
        content = json.load(file)
    
    return content

# load data
parent_directory = os.path.abspath(os.path.join(os.getcwd(), os.pardir))
data = pick_json_file(parent_directory)

# TODO: (11-24-2023) for now, we will focus on GPU metrics
data = data["metric"]

timestamps = []
memory_usages = []
for epoch, info in data.items():
    # convert epoch to datetime for plotting
    timestamp = datetime.fromtimestamp(float(epoch))
    # get GPU memory usage and convert it to GB
    memory_usage = float(info['gpu']['0']['memory']['used'].replace('MB', '')) / 1024

    timestamps.append(timestamp)
    memory_usages.append(memory_usage)

# plotting
plt.figure(figsize=(10, 5))
plt.plot(timestamps, memory_usages, marker='o')
plt.xlabel('Epoch Time (seconds)')
plt.ylabel('GPU Memory Usage (GB)')
plt.title('GPU Memory Usage Over Time')
plt.grid(True)
plt.tight_layout()

plt.show()
