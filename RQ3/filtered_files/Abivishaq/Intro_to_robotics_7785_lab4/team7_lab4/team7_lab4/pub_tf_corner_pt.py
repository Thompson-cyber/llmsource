# Note: Code generated by ChatGPT. This code is mainly for debugging
import rclpy
from rclpy.node import Node
from geometry_msgs.msg import Point
from tf2_ros import TransformBroadcaster
from geometry_msgs.msg import TransformStamped

class PointToTfNode(Node):
    def __init__(self):
        super().__init__('point_to_tf_node')
        self.subscription = self.create_subscription(
            Point,
            'corner_point_tpc',
            self.listener_callback,
            10)
        self.subscription  # prevent unused variable warning
        self.br = TransformBroadcaster(self)

    def listener_callback(self, msg):
        t = TransformStamped()
        t.header.stamp = self.get_clock().now().to_msg()
        t.header.frame_id = "odom"
        t.child_frame_id = "corner_point_frame"
        t.transform.translation.x = msg.x
        t.transform.translation.y = msg.y
        t.transform.translation.z = msg.z
        t.transform.rotation.x = 0.0
        t.transform.rotation.y = 0.0
        t.transform.rotation.z = 0.0
        t.transform.rotation.w = 1.0
        print("Publishing transform")
        self.br.sendTransform(t)

def main(args=None):
    rclpy.init(args=args)

    point_to_tf_node = PointToTfNode()

    rclpy.spin(point_to_tf_node)

    point_to_tf_node.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()
