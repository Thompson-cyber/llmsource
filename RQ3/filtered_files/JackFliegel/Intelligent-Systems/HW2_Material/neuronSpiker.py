# GENERATED BY CHATGPT-3.5 AUGUST 3 VERSION
import numpy as np
import matplotlib.pyplot as plt

# Izhikevich neuron parameters
a = 0.02
b = 0.2
c = -65
d = 8

# Simulation parameters
T = 1000  # Total time steps
dt = 1.0  # Time step size
I_values = np.arange(0, 41, 1)  # Input current values
trial_count = 10  # Number of trials for each I

# Function to simulate the Izhikevich neuron and calculate mean spike rate
def simulate_izhikevich(a, b, c, d, I):
    mean_spike_rate = 0
    
    for _ in range(trial_count):
        v = c
        u = b * v
        spike_count = 0
        
        for t in range(T):
            # Izhikevich model equations
            dv = (0.04 * v**2 + 5 * v + 140 - u + I) * dt
            du = (a * (b * v - u)) * dt
            
            v += dv
            u += du
            
            # Check for spike and reset
            if v >= 30:
                v = c
                u += d
                if t > 200:  # Count spike only if it occurs after 200 time steps
                    spike_count += 1
        
        mean_spike_rate += spike_count / 800.0  # Calculate mean spike rate over the last 800 time steps
    
    return mean_spike_rate / trial_count  # Calculate the mean of mean spike rates from trials

# Simulate the neuron for different I values and calculate mean spike rates
mean_spike_rates = []

for I in I_values:
    mean_spike_rate = simulate_izhikevich(a, b, c, d, I)
    mean_spike_rates.append(mean_spike_rate)

# Plot the mean spiking rate versus I
plt.plot(I_values, mean_spike_rates)
plt.xlabel('Input Current (I)')
plt.ylabel('Mean Spike Rate')
plt.title('Izhikevich Neuron Mean Spike Rate vs. Input Current')
plt.grid(True)
plt.show()
